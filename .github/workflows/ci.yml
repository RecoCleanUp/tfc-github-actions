# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - "**/README.md"
      - "**/LICENSE"
      - "**/.gitignore"

permissions:
  id-token: write
  contents: read

env:
  TF_CLOUD_ORGANIZATION: "aws-workshop-lep511"
  TF_WORKSPACE: "learn-terraform-github-actions"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest

    steps:
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.6
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init
        working-directory: terraform
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: Plan
        run: terraform plan -input=false -no-color
        working-directory: terraform
        continue-on-error: true

      - name: Show plan
        run: |
          echo "üí° ${{ steps.plan.outputs.stdout }}"
          echo "‚ùå ${{ steps.plan.outputs.stderr }}"
          echo "‚ùå ${{ steps.plan.outputs.exitcode }}"
        continue-on-error: true

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        working-directory: terraform
        